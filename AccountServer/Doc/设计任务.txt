// 帐号服务器，设计任务
// 仙剑修，2001.11.13


设计要求：
		每个帐号只允许同时有一个客户端登录。
		ISP包干制收费的用户，不需要判断其计费点是否耗尽，其用户的点数通常从0开始递减为负数。(其每月都DUMP出一张费用表，两月之差为当月费用)
		建一个（或几个）历史日志数据库，记录所有帐号信息，用于商业用途。
		点数耗尽时不踢玩家。(DJ)
		帐号服务器需要适当监测游戏服务器上传的计点消息的频度，并对特殊情况进行记录。


新增要求：(我)
		需要增加一个ClientIP上传属性，以保证是相同的IP登录游戏服务器。
		新增消息：帐号服务器->游戏服务器。玩家计费点耗尽，踢人。(暂不踢)


收费方式：
		1、预付费方式：先充计费点为正值，计费点减为0或负时将玩家“踢”下线。(暂不踢)
		2、包时方式：在固定时限内可不计点，时限到达时将玩家“踢”下线。(暂不踢)
		3、计帐方式：ISP包干制，计费点从0减为负数，定时结算。(定时清空，记录当月费用。另做一个累计数。)


优化版功能：(暂不设计)
		将客户端登录TCP连接改为UDP模式。以增加服务器响应速度，并减轻服务器压力。（但要注意过滤疯狂登录）
		不同的帐号可以使用相同的角色。就好比一个人可以申请多ISP帐号上线，登录同一个免费信箱。
		登录线程和计点线程都可以分为多个进程，与帐号服务器MYSQL一起分布于局域网中的多台机器上。登录机的IP可以通过硬件映射方式按分时转向不同的机器，要保证不是多台登录机同时DOWN机。


问题：
		。CAccount类没有自建堆，会有内存碎片。(由我自己设计)
		。是否接收到CMsgConnect消息后开始计费？(游戏服务器功能部分，不由我设计)
		。如何保证客户端不会跳过CMsgConnect消息上传。(由游戏服务器功能部分保证)
		。客户端连接到游戏服务器可能比帐号服务器的下传认证ID提前到达。(游戏服务器中的WAIT表要求两边都到达时才进入游戏)
		。游戏服务器连不上帐号服务器的超时多少。(游戏服务器一直继续运行，并持续重连帐号服务器)
		。CMsgConnect消息处理中没有出错情况。(由游戏服务器程序员设计)
		。游戏服务器列表是否需要做在帐号服务器中。(由AUTOPATCH实现)
		。多种计费模式的综合算法。(暂不考虑，每次只有一种模式。DJ)
		。需要新增查询点数的消息包。(由我设计)
		。现在的CMsgFee消息机制为被动计费机制，计费是否准确完全由游戏服务器控制。有严重安全隐患。（第一版暂时这样）
		。现有的计费机制为非完全同步机制，当帐号服务器重启时，一个帐号可登录两次。(暂不处理)
		。游戏服务器中是否有防止同一帐号登录两次的机制。(暂不处理)
		。查书：服务器主动断开SOCKET的WAITTIME(30秒到2分钟)
		。帐号ID是否允许为0(不为0)
		。记帐模式可自动增加帐号么(自动增加帐号)
		。const unsigned short _MSG_FEE			=_MSG_GENERAL+200;(新建)
		。const unsigned short _MSG_QUERYFEE	=_MSG_GENERAL+201;(新建)
		。ISP自动增加帐号产生的垃圾帐号如何处理(暂不设计ISP计费功能)
		。当时间片不够用时，登录线程和计费线程谁优化？(计费线程优先)
		。当帐号服务器重启时，由于与游戏服务器不同步，玩家可以同时登录两个角色。(重启所有的游戏服务器。DJ)(增加玩家延迟登录功能，以便同步。ZS)
		。当帐号超时后，如果玩家一直挂机，就可以一直玩下去。(不必处理。DJ)
		。当单独重启帐号服务器时，网吧帐号计数会被清空。这时网吧登录的实际数量会超过LICENCE数量。


我的任务范围：
		1、客户端通讯底层：改为类封装。
		2、游戏服务器通讯底层：增加一个帐号SOCKET线程。
		3、帐号服务器全部。


建议：
		1、在CMsgConnect消息中，增加ClientIP。以增加校验。
		2、游戏服务器中的WaitLogin表中，应定期删除超时不登录的玩家。
		3、客户端登录游戏服务器时，要检查帐号ID是否相同。如相同由应复盖旧的WAITLOGIN记录。以防WAITLOGING表被充爆。

